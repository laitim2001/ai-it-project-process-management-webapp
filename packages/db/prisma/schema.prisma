// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ==================================================================
// 1. 核心使用者與權限模型 (Core User & Auth Models)
// ==================================================================

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String?  // 加密後的密碼 (bcrypt hash)，Azure AD B2C 用戶此欄位為 null
  roleId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role         Role              @relation(fields: [roleId], references: [id])
  projects     Project[]         @relation("ProjectManager")
  approvals    Project[]         @relation("Supervisor")
  comments     Comment[]
  historyItems History[]

  @@index([email])
  @@index([roleId])
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique // "ProjectManager", "Supervisor", "Admin"
  users User[]
}

// ==================================================================
// 2. 核心業務流程模型 (Core Business Process Models)
// ==================================================================

model BudgetPool {
  id            String   @id @default(uuid())
  name          String
  totalAmount   Float
  financialYear Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  projects Project[]

  @@index([financialYear])
}

model Project {
  id           String    @id @default(uuid())
  name         String
  description  String?
  status       String    @default("Draft") // "Draft", "InProgress", "Completed", "Archived"
  managerId    String
  supervisorId String
  budgetPoolId String
  startDate    DateTime
  endDate      DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  manager        User             @relation("ProjectManager", fields: [managerId], references: [id])
  supervisor     User             @relation("Supervisor", fields: [supervisorId], references: [id])
  budgetPool     BudgetPool       @relation(fields: [budgetPoolId], references: [id])
  proposals      BudgetProposal[]
  purchaseOrders PurchaseOrder[]

  @@index([managerId])
  @@index([supervisorId])
  @@index([budgetPoolId])
  @@index([status])
}

model BudgetProposal {
  id        String   @id @default(uuid())
  title     String
  amount    Float
  status    String   @default("Draft") // "Draft", "PendingApproval", "Approved", "Rejected", "MoreInfoRequired"
  projectId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  project      Project   @relation(fields: [projectId], references: [id])
  comments     Comment[]
  historyItems History[]

  @@index([projectId])
  @@index([status])
}

model Vendor {
  id            String   @id @default(uuid())
  name          String   @unique
  contactPerson String?
  contactEmail  String?
  phone         String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  quotes         Quote[]
  purchaseOrders PurchaseOrder[]
}

model Quote {
  id              String   @id @default(uuid())
  filePath        String
  uploadDate      DateTime @default(now())
  amount          Float
  vendorId        String
  purchaseOrderId String?  @unique
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  vendor        Vendor         @relation(fields: [vendorId], references: [id])
  purchaseOrder PurchaseOrder? @relation(fields: [purchaseOrderId], references: [id])

  @@index([vendorId])
}

model PurchaseOrder {
  id          String   @id @default(uuid())
  poNumber    String   @unique @default(cuid())
  date        DateTime @default(now())
  totalAmount Float
  projectId   String
  vendorId    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  project  Project   @relation(fields: [projectId], references: [id])
  vendor   Vendor    @relation(fields: [vendorId], references: [id])
  quote    Quote?
  expenses Expense[]

  @@index([projectId])
  @@index([vendorId])
}

model Expense {
  id              String   @id @default(uuid())
  invoiceFilePath String?
  amount          Float
  expenseDate     DateTime
  status          String   @default("Draft") // "Draft", "PendingApproval", "Approved", "Paid"
  purchaseOrderId String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  purchaseOrder PurchaseOrder @relation(fields: [purchaseOrderId], references: [id])

  @@index([purchaseOrderId])
  @@index([status])
}

// ==================================================================
// 3. 輔助模型 (Supporting Models)
// ==================================================================

model Comment {
  id               String   @id @default(uuid())
  content          String
  userId           String
  budgetProposalId String
  createdAt        DateTime @default(now())

  user           User           @relation(fields: [userId], references: [id])
  budgetProposal BudgetProposal @relation(fields: [budgetProposalId], references: [id])

  @@index([budgetProposalId])
  @@index([userId])
}

model History {
  id               String   @id @default(uuid())
  action           String // "SUBMITTED", "APPROVED", "REJECTED", "MORE_INFO_REQUIRED"
  details          String?
  userId           String
  budgetProposalId String
  createdAt        DateTime @default(now())

  user           User           @relation(fields: [userId], references: [id])
  budgetProposal BudgetProposal @relation(fields: [budgetProposalId], references: [id])

  @@index([budgetProposalId])
  @@index([userId])
}
